{"version":3,"sources":["index.js"],"names":["updateHTML","applicableParents","document","querySelectorAll","element","i","search","dataset","restsheetSearch","limit","restsheetLimit","offset","restsheetOffset","URL","restsheetUrl","endsWith","tagName","configureForm","style","display","fetchData","then","data","contentUnits","length","push","innerHTML","interpolatedUnits","map","contentUnit","index","interpolateString","join","catch","error","queryURL","Promise","resolve","reject","fetch","response","json","string","replacements","replace","fullCapture","key","replacement","form","addEventListener","e","preventDefault","formData","FormData","Array","from","entries","reduce","memo","pair","[object Object]","requestData","method","mode","headers","Content-Type","body","JSON","stringify","status","submitEvent","CustomEvent","detail","target","dispatchEvent"],"mappings":"AAEA,SAASA,aACP,MAAMC,EAAoBC,SAASC,iBAAiB,wBACpD,IAAK,IAAWC,EAAPC,EAAI,EAAaD,EAAUH,EAAkBI,GAAKA,IAAK,CAC9D,MAAMC,EAASF,EAAQG,QAAQC,gBAC3BC,EAAQL,EAAQG,QAAQG,eACxBC,EAASP,EAAQG,QAAQK,gBAE7B,IAAIC,EAAMT,EAAQG,QAAQO,aAI1B,GAHAD,EAAMA,EAAIE,SAAS,KAAOF,EAAMA,EAAM,IAGd,SAApBT,EAAQY,QACV,OAAOC,cAAcb,EAASS,GAGhCT,EAAQc,MAAMC,QAAU,OAExBC,WAAWP,IAAAA,EAAKP,OAAAA,EAAQG,MAAAA,EAAOE,OAAAA,IAC1BU,KAAMC,IAEL,MAAMC,KACN,IAAK,IAAIlB,EAAI,EAAGA,EAAIiB,EAAKE,OAAQnB,IAC/BkB,EAAaE,KAAKrB,EAAQsB,WAE5B,MAAMC,EAAoBJ,EAAaK,IAAI,CAACC,EAAaC,IAChDC,kBAAkBF,EAAaP,EAAKQ,KAI7C1B,EAAQsB,UAAYC,EAAkBK,KAAK,IAC3C5B,EAAQc,MAAMC,QAAU,KAEzBc,MAAOC,IACN,MAAMA,KAKhB,SAASd,WAAUP,IAACA,EAAGP,OAAEA,EAAMG,MAAEA,EAAKE,OAAEA,IAOtC,MACMwB,KAActB,IADKP,EAAS,UAAY,OAL5CG,WAAiBA,IAAU,GAC3BE,YAAmBA,IAAW,GAC9BL,YAAmBA,IAAW,IAI+B0B,KAAK,OAEpE,OAAO,IAAII,QAAQ,CAACC,EAASC,KAC3BC,MAAMJ,GACDd,KAAMmB,GAAaA,EAASC,QAC5BpB,KAAMmB,GAAaH,EAAQG,IAC3BP,MAAOC,GAAUI,EAAOJ,MAIjC,SAASH,kBAAkBW,EAAQC,GACjC,OAAOD,EAAOE,QAAQ,gBAAiB,CAACC,EAAaC,KACnD,MAAMC,EAAcJ,EAAaG,GACjC,MAA+B,iBAAhBC,GAAmD,iBAAhBA,EAA4BA,EAAcF,IAIhG,SAAS5B,cAAc+B,EAAMnC,GAC3BA,KAASA,UACTmC,EAAKC,iBAAiB,SAAWC,IAC3BA,EAAEC,iBACF,IAAIC,EAAW,IAAIC,SAASL,GAG5BI,EAAWE,MAAMC,KAAKH,EAASI,WAAWC,OAAO,CAACC,EAAMC,SACnDD,EACHE,CAACD,EAAK,IAAKA,EAAK,SAGlB,MAAME,GACJC,OAAQ,OACRC,KAAM,OACNC,SACEC,eAAgB,mCAElBC,KAAMC,KAAKC,WAAWhB,KAGxBb,MAAM1B,EAAKgD,GACNxC,KAAMmB,GAAa,IAAIJ,QAASC,GAAYG,EAASC,OAAOpB,KAAM6C,GAAS7B,GAC1EgC,OAAQ7B,EAAS6B,OACjBH,KAAAA,OAED7C,KAAMmB,IACL,MAAM8B,EAAc,IAAIC,YAAY,oBAAqBC,OAAQhC,IACjEU,EAAEuB,OAAOC,cAAcJ,KAExBrC,MAAOC,IACN,MAAMA,MAhGpBhC,SAAS+C,iBAAiB,mBAAoBjD","file":"index.js","sourcesContent":["document.addEventListener('DOMContentLoaded', updateHTML);\r\n\r\nfunction updateHTML() {\r\n  const applicableParents = document.querySelectorAll('[data-restsheet-url]');\r\n  for (let i = 0, element; (element = applicableParents[i]); i++) {\r\n    const search = element.dataset.restsheetSearch,\r\n        limit = element.dataset.restsheetLimit,\r\n        offset = element.dataset.restsheetOffset;\r\n\r\n    let URL = element.dataset.restsheetUrl;\r\n    URL = URL.endsWith('/') ? URL : URL + '/'; // Normalize URL to end with slash\r\n\r\n    // Just add appropriate event handler if the parent node is a form\r\n    if (element.tagName === 'FORM') {\r\n      return configureForm(element, URL);\r\n    }\r\n\r\n    element.style.display = 'none';\r\n\r\n    fetchData({URL, search, limit, offset})\r\n        .then((data) => {\r\n          // Get innerHTML, interpolate it for each row in spreadsheet\r\n          const contentUnits = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            contentUnits.push(element.innerHTML);\r\n          }\r\n          const interpolatedUnits = contentUnits.map((contentUnit, index) => {\r\n            return interpolateString(contentUnit, data[index]);\r\n          });\r\n\r\n          // Update the DOM\r\n          element.innerHTML = interpolatedUnits.join('');\r\n          element.style.display = '';\r\n        })\r\n        .catch((error) => {\r\n          throw error;\r\n        });\r\n  }\r\n}\r\n\r\nfunction fetchData({URL, search, limit, offset}) {\r\n  let URLGetParameters = [\r\n    limit ? `limit=${limit}` : '',\r\n    offset ? `offset=${offset}` : '',\r\n    search ? `search=${search}` : ''\r\n  ];\r\n\r\n  const searchURLSegment = search ? 'search/' : '';\r\n  const queryURL = `${URL}${searchURLSegment}?${URLGetParameters.join('&')}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    fetch(queryURL)\r\n        .then((response) => response.json())\r\n        .then((response) => resolve(response))\r\n        .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nfunction interpolateString(string, replacements) {\r\n  return string.replace(/{{([^{}]*)}}/g, (fullCapture, key) => {\r\n    const replacement = replacements[key];\r\n    return (typeof replacement === 'string' || typeof replacement === 'number') ? replacement : fullCapture;\r\n  });\r\n}\r\n\r\nfunction configureForm(form, URL) {\r\n  URL = `${URL}append`;\r\n  form.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n        let formData = new FormData(form);\r\n\r\n        // Convert FormData into JSON\r\n        formData = Array.from(formData.entries()).reduce((memo, pair) => ({\r\n          ...memo,\r\n          [pair[0]]: pair[1],\r\n        }), {});\r\n\r\n        const requestData = {\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Content-Type': 'application/json; charset=utf-8',\r\n          },\r\n          body: JSON.stringify([formData]) // The API expects an array of rows\r\n        };\r\n\r\n        fetch(URL, requestData)\r\n            .then((response) => new Promise((resolve) => response.json().then((body) => resolve({\r\n              status: response.status,\r\n              body\r\n            }))))\r\n            .then((response) => {\r\n              const submitEvent = new CustomEvent('ResponseReceived', {detail: response});\r\n              e.target.dispatchEvent(submitEvent);\r\n            })\r\n            .catch((error) => {\r\n              throw error;\r\n            });\r\n      }\r\n  );\r\n}"]}